# Caddyfile for S3 Reverse Proxy with 'data/' Path Structure

# Global options block.
{
    debug 
}

# Define the HTTP server
:{$SERVER_PORT:8080} {
    log {
        output stderr
        level  DEBUG
    }

    # Health check endpoint
    handle /healthz {
        respond "OK" 200
    }

    # Handle manifest files specifically
    @manifest_match {
        path */fed-mods.json
    }
    handle @manifest_match {
        # Set appropriate headers for manifest files
        header Content-Type application/json
        header Cache-Control "no-cache, no-store, must-revalidate"
        header Pragma no-cache
        header Expires 0

        # Try to serve from operator-generated location first, then fallback to static locations
        try_files {$MANIFEST_LOCATION:/srv/dist/operator-generated/fed-modules.json} {$BUCKET_PATH_PREFIX}/data{http.request.uri.path} {$BUCKET_PATH_PREFIX}/data/stable{http.request.uri.path} {$BUCKET_PATH_PREFIX}/data/preview{http.request.uri.path}
        
        reverse_proxy {$MINIO_UPSTREAM_URL} {
            header_up Host {http.reverse_proxy.upstream.hostport}
        }
    }

    # Handle operator-generated fed-modules.json specifically
    @operator_fed_modules {
        path {$MANIFEST_LOCATION:/srv/dist/operator-generated/fed-modules.json}
    }
    handle @operator_fed_modules {
        header Content-Type application/json
        header Cache-Control "no-cache, no-store, must-revalidate"
        header Pragma no-cache
        header Expires 0

        reverse_proxy {$MINIO_UPSTREAM_URL} {
            header_up Host {http.reverse_proxy.upstream.hostport}
        }
    }

    # Main request handling.
    # If incoming request is /app_name/filepath.ext
    # it will be rewritten to BUCKET_PATH_PREFIX/data/app_name/filepath.ext
    @main_match {
        not path */fed-mods.json
        not path {$MANIFEST_LOCATION:/srv/dist/operator-generated/fed-modules.json}
    }
    handle @main_match {
        # Prepend BUCKET_PATH_PREFIX/data to the incoming request URI path
        rewrite * {$BUCKET_PATH_PREFIX}/data{http.request.uri.path}
        
        reverse_proxy {$MINIO_UPSTREAM_URL} {
            header_up Host {http.reverse_proxy.upstream.hostport}
        }
    }

    # Handle errors from the above proxy attempt (e.g., for SPA routes)
    handle_errors {
        @spa_fallback expression {http.error.status_code} == 403 || {http.error.status_code} == 404
        handle @spa_fallback {
            # Rewrite to the SPA entry point, assuming it's also under the 'data' prefix in S3.
            # e.g., if SPA_ENTRYPOINT_PATH is /index.html, this becomes /frontend-assets/data/index.html
            rewrite * {$BUCKET_PATH_PREFIX}/data{$SPA_ENTRYPOINT_PATH:/index.html}
            
            reverse_proxy {$MINIO_UPSTREAM_URL} {
                header_up Host {http.reverse_proxy.upstream.hostport}
            }
        }
        # For other errors not handled by SPA fallback
        respond "{http.error.status_code} {http.error.status_text}" {
            close
        }
    }
}
